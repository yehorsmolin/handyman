<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7c4ae005-f306-4011-aa45-a473f0ac9a9a" name="Changes" comment="Docker, tests, telegram, graphql, authorisation, oauth, views fix, celery.">
      <change afterPath="$PROJECT_DIR$/inventory/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory/tests/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory/tests/unit_tests/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory/tests/unit_tests/viewsets_tests.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/e2e/e2e.py" beforeDir="false" afterPath="$PROJECT_DIR$/inventory/tests/e2e/e2e.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/unit_tests/models_tests.py" beforeDir="false" afterPath="$PROJECT_DIR$/inventory/tests/unit_tests/models_tests.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/unit_tests/serializers_tests.py" beforeDir="false" afterPath="$PROJECT_DIR$/inventory/tests/unit_tests/serializers_tests.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Dockerfile" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2gSIR1D9eo355FgkWw2xuFhC4n3" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultHtmlFileTemplate": "HTML File",
    "Django Server.Handyman.executor": "Run",
    "Django tests.Test: inventory.tests.unit_tests.viewsets_tests.executor": "Run",
    "Django tests.Test: tests.unit_tests.models_tests.executor": "Run",
    "Django tests.Test: tests.unit_tests.serializers_tests.executor": "Run",
    "Django tests.Test: tests.unit_tests.viewsets_tests.executor": "Run",
    "Python.api.executor": "Run",
    "Python.set_webhook.executor": "Run",
    "Python.telegram.executor": "Run",
    "RunOnceActivity.OpenDjangoStructureViewOnStart": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "django.template.preview.state": "SHOW_EDITOR_AND_PREVIEW",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/oldfshnd/PycharmProjects/Handyman/google_sheets",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\oldfshnd\PycharmProjects\Handyman\google_sheets" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\oldfshnd\PycharmProjects\Handyman\inventory" />
      <recent name="C:\Users\oldfshnd\PycharmProjects\Handyman\Handyman" />
    </key>
  </component>
  <component name="RunManager" selected="Django tests.Test: inventory.tests.unit_tests.viewsets_tests">
    <configuration name="Test: inventory.tests.unit_tests.viewsets_tests" type="DjangoTestsConfigurationType" temporary="true">
      <module name="Handyman" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="inventory.tests.unit_tests.viewsets_tests" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Test: tests.unit_tests.models_tests" type="DjangoTestsConfigurationType" temporary="true">
      <module name="Handyman" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="tests.unit_tests.models_tests" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Test: tests.unit_tests.serializers_tests" type="DjangoTestsConfigurationType" temporary="true">
      <module name="Handyman" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="tests.unit_tests.serializers_tests" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Test: tests.unit_tests.viewsets_tests" type="DjangoTestsConfigurationType" temporary="true">
      <module name="Handyman" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="tests.unit_tests.viewsets_tests" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration name="telegram" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Handyman" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/telegram" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/telegram/telegram.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Handyman" type="Python.DjangoServer" factoryName="Django server">
      <module name="Handyman" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="DJANGO_SETTINGS_MODULE" value="Handyman.settings" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="launchJavascriptDebuger" value="false" />
      <option name="port" value="8000" />
      <option name="host" value="localhost" />
      <option name="additionalOptions" value="" />
      <option name="browserUrl" value="" />
      <option name="runTestServer" value="false" />
      <option name="runNoReload" value="false" />
      <option name="useCustomRunCommand" value="false" />
      <option name="customRunCommand" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Django tests.Test: inventory.tests.unit_tests.viewsets_tests" />
        <item itemvalue="Django tests.Test: tests.unit_tests.viewsets_tests" />
        <item itemvalue="Django tests.Test: tests.unit_tests.serializers_tests" />
        <item itemvalue="Django tests.Test: tests.unit_tests.models_tests" />
        <item itemvalue="Python.telegram" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-50da183f06c8-2887949eec09-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.13135.95" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7c4ae005-f306-4011-aa45-a473f0ac9a9a" name="Changes" comment="" />
      <created>1715684539702</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1715684539702</updated>
      <workItem from="1715684566717" duration="20921000" />
      <workItem from="1715714507898" duration="13582000" />
      <workItem from="1715839405054" duration="28043000" />
      <workItem from="1716023936828" duration="4939000" />
      <workItem from="1716035860323" duration="12793000" />
      <workItem from="1716139256441" duration="5638000" />
      <workItem from="1716145219410" duration="3603000" />
      <workItem from="1716188167319" duration="12047000" />
      <workItem from="1716202080274" duration="13104000" />
    </task>
    <task id="LOCAL-00001" summary="Created project structure, basic models, serializers, basic views and viewsets; implemented basic, token and custom authentification; written permissions (should be edited further), implemented router;">
      <option name="closed" value="true" />
      <created>1715715903583</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1715715903583</updated>
    </task>
    <task id="LOCAL-00002" summary="Docker, tests, telegram, graphql, authorisation, oauth, views fix, celery.">
      <option name="closed" value="true" />
      <created>1716206633938</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1716206633938</updated>
    </task>
    <task id="LOCAL-00003" summary="Docker, tests, telegram, graphql, authorisation, oauth, views fix, celery.">
      <option name="closed" value="true" />
      <created>1716206821537</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1716206821537</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Created project structure, basic models, serializers, basic views and viewsets; implemented basic, token and custom authentification; written permissions (should be edited further), implemented router;" />
    <MESSAGE value="Docker, tests, telegram, graphql, authorisation, oauth, views fix, celery." />
    <option name="LAST_COMMIT_MESSAGE" value="Docker, tests, telegram, graphql, authorisation, oauth, views fix, celery." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Handyman$set_webhook.coverage" NAME="set_webhook Coverage Results" MODIFIED="1715856007743" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Handyman$Test__inventory_tests_unit_tests_viewsets_tests.coverage" NAME="Test: inventory.tests.unit_tests.viewsets_tests Coverage Results" MODIFIED="1716216242736" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/Handyman$Test__tests_unit_tests_models_tests.coverage" NAME="Test: tests.unit_tests.models_tests Coverage Results" MODIFIED="1716195289867" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/Handyman$Test__tests_unit_tests_viewsets_tests.coverage" NAME="Test: tests.unit_tests.viewsets_tests Coverage Results" MODIFIED="1716213292352" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/Handyman$api.coverage" NAME="api Coverage Results" MODIFIED="1716026909995" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/google_sheets" />
    <SUITE FILE_PATH="coverage/Handyman$telegram.coverage" NAME="telegram Coverage Results" MODIFIED="1716191688064" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/telegram" />
    <SUITE FILE_PATH="coverage/Handyman$Test__tests_unit_tests_serializers_tests.coverage" NAME="Test: tests.unit_tests.serializers_tests Coverage Results" MODIFIED="1716199358519" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
  </component>
</project>